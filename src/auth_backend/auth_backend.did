t  service auth {
    generate_token : (principal: principal) -> (text);
    validate_token : (text) -> (Claims) query;
    get_user_roles : (principal) -> (vec UserRole) query;
}

type Claims = record {
    sub: text;
    exp: nat64;
    roles: vec text;
};

service : {
    // Role management
    assign_roles : (principal, vec text) -> ();
    get_roles : (principal) -> (vec text) query;
    
    // Existing authentication methods
    register_user : (text, text) -> (text);
    login : (text, text) -> (text);
    validate_token : (text) -> (Claims) query;
};

type User = record {
    principal: principal;
    roles: vec UserRole;
    session_token: text;
    expires_at: nat64;
};

type UserRole = variant { Admin; DeviceManager; Viewer };